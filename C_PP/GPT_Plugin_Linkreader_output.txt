I'm sorry, but as an AI language model developed by OpenAI, I'm unable to directly read and interpret the content of PDF files. However, I can guide you on how to operationalize the algorithms found in the paper.

Here are the general steps you would follow:

1. **Understand the Algorithm**: Read the paper thoroughly to understand the algorithm. Pay special attention to the methodology section, as it often contains the most detailed description of the algorithm.

2. **Pseudocode**: Write out the algorithm in pseudocode. This will help you understand the


{
  "statusCode": 200,
  "statusText": "OK",
  "headers": {
    "server": "Apache",
    "date": "Sat, 22 Jul 2023 12:19:23 GMT",
    "last-modified": "Thu, 20 Jul 2023 00:55:17 GMT",
    "content-type": "application/pdf",
    "content-length": "280506"
  },
  "meta": {},
  "content": "\nar\nX\niv\n:2\n30\n7.\n09\n76\n0v\n1 \n [\ncs\n.D\nS]\n  1\n9 \nJu\nl 2\n02\n3\nOn the Tractability of Defensive Alliance\nProblem∗\nSangam Balchandar Reddy and Anjeneya Swami Kare\nSchool of Computer and Information Sciences, University of Hyderabad,\nHyderabad, India.\n{21mcpc14,askcs}@uohyd.ac.in\nAbstract. Given a graph G = (V,E), a non-empty set S ⊆ V is a De-\nfensive Alliance, if for every vertex v ∈ S, the majority of its closed\nneighbours are in S, that is, |NG[v]∩ S| ≥ |NG[v] \\ S|. The decision ver-\nsion of the problem is known to be NP-Complete even when restricted to\nsplit and bipartite graphs. The problem is fixed-parameter tractable for\nthe parameters solution size, vertex cover number and neighbourhood\ndiversity. For the parameters treewidth and feedback vertex set number,\nthe problem is W[1]-hard.\nIn this paper, we study the Defensive Alliance problem for\ngraphs with bounded degree. We show that the problem is polynomial-\ntime solvable on graphs with maximum degree at most 5 and NP-Complete\non graphs with maximum degree 6. This rules out the fixed-parameter\ntractability of the problem for the parameter maximum degree of the\ngraph. We also consider the problem from the standpoint of parameter-\nized complexity. We provide an FPT algorithm using the Integer Linear\nProgramming approach for the parameter distance to clique. We also\nanswer an open question posed in [9] by providing an FPT algorithm for\nthe parameter twin cover.\nKeywords: Defensive Alliance · Bounded Degree Graphs · Twin cover\n· Distance to clique · NP-Complete · FPT\n1 Introduction\nWe, humans, form alliances for the sake of mutual benefit. This can often be\nseen in politics, businesses, trades, etc. The main agenda behind the alliance is\nto achieve a common goal between the parties. Based on this idea, the alliances\nare classified as follows. An alliance is formed between the parties of a group to\ndefend against an attack from other parties (defensive alliance) or to be able to\nattack other parties (offensive alliance). The concept of alliances in graphs was\nfirst introduced by Kristiansen, Hedetniemi and Hedetniemi [17]. The initial al-\ngorithmic results of the problem were given by Jamieson [13]. Alliances in graphs\nhave been well studied [2] and various generalizations are also studied [7, 21].\n∗Preliminary version of this paper has appeared in 9th Annual International Con-\nference on Algorithms and Discrete Applied Mathematics, CALDAM 2023\nhttp://arxiv.org/abs/2307.09760v1\n2 Balchandar Reddy and A. S. Kare\nA defensive alliance is a non-empty set S ⊆ V , such that for every vertex\nv ∈ S : |NG[v]∩S| ≥ |NG[v] \\S|. We say that a vertex v is protected if it has at\nleast as many closed neighbours inside S as it has outside S. The boundary of\na set S ⊆ V is denoted by ∂S and represents the vertices in the neighbourhood\nof S, excluding S, i.e., ∂S = N [S] \\ S. An offensive alliance is a non-empty set\nS ⊆ V , such that for every vertex v ∈ ∂S : |NG[v]∩S| ≥ |NG[v] \\S|. A powerful\nalliance is both defensive and offensive simultaneously. An alliance is global if it\nis also a dominating set. In this paper, we confine our study to the DEFENSIVE\nALLIANCE problem. We define the decision version of the problem as follows:\nDEFENSIVE ALLIANCE:\nInput: A simple, undirected graph G = (V,E), and a positive integer k.\nQuestion: Is there a defensive alliance S ⊆ V such that |S| ≤ k?\nThe optimization version of the problem asks to compute the defensive alliance\nwith minimum cardinality.\nKnown results. There are polynomial time algorithms for finding minimum al-\nliances∗ in trees [1, 13]. Kiyomi and Otachi [16] have provided an XP algorithm\non graphs with bounded treewidth. There is a polynomial time algorithm for\nfinding a minimum defensive alliance in series-parallel graphs [4]. Jamieson et\nal. [12] showed that the defensive alliance is NP-Complete even when restricted\nto split and bipartite graphs. Gaikwad and Maity [9] proved that the defensive\nalliance is NP-Complete on circle graphs. Fernau and Raible [6] proved that the\nalliance problems, including their global versions, are fixed-parameter tractable\nwhen parameterized by the solution size. Enciso [4] proved that defensive and\nglobal defensive alliances are fixed-parameter tractable parameterized by domino\ntreewidth. Alliances are fixed-parameter tractable when parameterized by vertex\ncover number of the input graph [16]. Recently, both the defensive and offensive\nalliances were also shown to be fixed-parameter tractable parameterized by the\nneighborhood diversity of the input graph [8]. Defensive alliance is W[1]-hard\nparameterized by a wide range of parameters such as the feedback vertex set,\ntreewidth, cliquewidth, treedepth and pathwidth [9].\nOur results. We investigate the complexity of the DEFENSIVE ALLIANCE problem\non graphs with bounded degree. We also study the fixed-parameter tractability\nof the problem for the parameters distance to clique and twin cover. Our main\nfindings are as follows:\n1. We show that the DEFENSIVE ALLIANCE problem is polynomial-time solvable\non graphs with maximum degree at most 5.\n2. We prove that the DEFENSIVE ALLIANCE problem is NP-Complete on graphs\nwith maximum degree 6. We give a reduction from the well-known NP-\nComplete problem, DOMINATING SET on cubic graphs.\n3. We also show that the DEFENSIVE ALLIANCE problem is FPT parameterized\nby distance to clique.\n∗By alliances, we mean defensive, offensive, and powerful alliance problems\nTractability of defensive alliance in graphs 3\n4. We provide an FPT algorithm for the DEFENSIVE ALLIANCE problem param-\neterized by twin cover, which answers an open question posed in [9].\n2 Preliminaries\nNotation and terminology. We consider only simple, finite, connected and undi-\nrected graphs. Let G = (V,E) be a graph with V as the vertex set and E as\nthe edge set such that n = |V | and m = |E|. ∆(G) represents the maximum\ndegree of G. We denote the open neighbourhood of a vertex v by NG(v) and the\nclosed neighbourhood by NG[v]. The set of vertices that belong to NG(v) and\nNG[v], respectively, are referred to as the neighbours and closed neighbours of a\nvertex v. The open neighbourhood of a set S is denoted by NG(S) and the closed\nneighbourhood by NG[S]. NG(S) =\n⋃\nv∈S\nNG(v) and NG[S] =\n⋃\nv∈S\nNG[v]. The de-\ngree of a vertex v is represented by d(v) and d(v) = |N(v)|. dist(a, b) represents\nthe shortest-path distance between the vertices a and b. SP (a, b) represents the\nset of vertices in the shortest path between a, b including a, b. The girth of a\ngraph G, is the length of the shortest cycle in G and is denoted by g. A graph\nis r-regular if each vertex in the graph has a degree exactly r. A cubic graph is\na 3-regular graph.\nParameterized Complexity. A problem is considered to be fixed-parameter tractable\nw.r.t. a parameter k, if there exists an algorithm with running time O(f(k) ·\nnO(1)), where f is a computable function. We use O∗(f(k)) to denote the time\ncomplexity of the form O(f(k) · nO(1)). Similarly, the term W[1]-hard is used\nto express the hardness of a problem w.r.t. a parameter. In parameterized com-\nplexity, the hierarchy of complexity classes is defined as follows: FPT ⊆ W[1] ⊆\nW[2] ⊆ ... ⊆ XP. In general, FPT 6= W[1] under the Exponential Time Hypoth-\nesis [11]. Class W[1] is the analog of NP in parameterized complexity. For more\ninformation on graph theory and parameterized complexity, we refer the reader\nto [22] and [3], respectively.\n3 DEFENSIVE ALLIANCE on graphs with maximum degree at\nmost 5\nIn this section, we show that the DEFENSIVE ALLIANCE problem is polynomial-\ntime solvable on graphs with maximum degree at most 5. For the rest of the\nsection, we assume that ∆(G) ≤ 5.\nTheorem 1. The DEFENSIVE ALLIANCE problem on graphs with ∆(G) ≤ 5 is\npolynomial-time solvable.\nLemma 1. A set containing only the vertices of a cycle in G, forms a defensive\nalliance.\nProof. Let S be a set containing only the vertices of a cycle. All the vertices in S\n4 Balchandar Reddy and A. S. Kare\nwill have three closed neighbours in S and at most three neighbours outside S.\nTherefore, all the vertices in S are protected, making it a defensive alliance. ⊓⊔\nv1\nv2\nv4\nv3\nv5\nv6\nv7\nv8\nv9\nv1\nv2\nv4\nv3\nv5\nv6\nv7\nv8\nv9\nFig. 1. Illustration of Observation 1, with an instance of the subproblem P4 on the left\nand an instance of the subproblem P5 on the right.\nConsider a graph G = (V,E), where |V | = n and V = {v1, v2, ..., vn}. We\nsolve n independent subproblems: P1, P2, ..., Pn, where Pi denotes the problem\nof computing the smallest defensive alliance of G containing the vertex vi.\nObservation 1: Consider the graph shown in Figure 1. The union of the ver-\ntices of the path v4, v5 and the cycle v5, v6 and v7 forms a defensive alliance for\nthe subproblem P4 which includes the vertex v4. However, the cycle v5, v6 and\nv7 forms a defensive alliance of smaller cardinality in subproblem P5.\nFrom observation 1, it is clear that in order to compute the optimal solution\nto the original problem, we can ignore a case where we consider the vertices of a\ncycle and the path joining the cycle to obtain the defensive alliance for subprob-\nlems. For the rest of this section, we compute the solutions to the subproblems\nby avoiding such a scenario.\nObservation 2: If d(vi) ≤ 1, then vi itself forms a defensive alliance. So, we\nconsider only the subproblems in which d(vi) ≥ 2.\nLemma 2. Let d(vi) = 3 [or 2], the size of the optimal solution for Pi, will be\nminimum among the following:\n1. minx∈W dist(vi, x)+1, where W = {u ∈ V (G) \\ vi|d(u) ≤ 3}.\n2. length of the shortest cycle containing vi.\nProof. Let u1, u2 and u3 [or u1 and u2] are the neighbours of vi.\nCase 1: Let us assume that exactly one neighbour of vi (say u1) is picked into the\nsolution. As neither u2 nor u3 [or u2] can be a part of the solution, it is clear that\nthe defensive alliance cannot be a set of vertices from a cycle containing vi. We\ncannot add any more vertices that would form a cycle outside vi, as explained\nearlier in Observation 1. Then the only way we could form a defensive alliance\ncontaining vi and u1 is to find the closest vertex (say x) from vi, with d(x) ≤ 3\nand add all the vertices in the shortest path joining u1 and x to the set. Except\nx and vi all the other vertices of the path has at least three closed neighbours\nTractability of defensive alliance in graphs 5\nin the set and both xi and vi with the degree of at most three has at least two\nclosed neighbours in the set. Hence, the vertices of the path joining x and vi\nforms a defensive alliance. If no such x exists, then Pi cannot lead to an optimal\nsolution.\nCase 2: Let us assume that exactly two neighbours of vi (say u1 and u2) are\npicked into the solution. The only way to form a defensive alliance set contain-\ning the vertices vi, u1 and u2 is to find the shortest cycle containing vi, u1 and\nu2 and add all the vertices in the cycle to the set. If no such cycle exists, then\nPi cannot lead to an optimal solution.\nCase 3: Let us assume that all three neighbours of vi are picked into the solution.\nIf the defensive alliance forms a cycle containing the three neighbours of vi then\nwe can infer that there is a smaller cycle that contains just the two neighbours\nof vi. Hence, this case would lead to a larger set than either case 1 or case 2.\nWe will have three [or two] combinations in case 1 and three [or one] com-\nbinations in case 2. The minimum among them will return the optimal solution\nfor the subproblem Pi. ⊓⊔\nLemma 3. Let d(vi) = 5 [or 4], the size of the optimal solution for Pi will be\nthe minimum among the following:\n1. minx 6=y∈W (dist(vi, x)+dist(vi, y)+1), W = {u ∈ V (G)\\vi|d(u) ≤ 3}, {SP (vi, x)∩\nSP (vi, y)} \\ vi = ∅.\n2. length of the shortest cycle containing vi.\nProof. Let u1, u2, u3, u4 and u5 [or u1, u2, u3 and u4] are the neighbours of vi.\nCase 1: Let us assume that exactly one neighbour of vi (say u1) is picked into the\nsolution. Then, it is easy to see that vi is not protected. Therefore, no defensive\nalliance is possible by picking only one neighbour of vi as part of the solution.\nCase 2: Let us assume that exactly two neighbours of vi (say u1 and u2) are\npicked into the solution. The defensive alliance containing the vertices vi, u1 and\nu2 can be formed either with the vertices of the shortest cycle containing vi, u1\nand u2 or with the vertices along the two vertex disjoint shortest paths from u1\nand u2 to vertices with degrees at most three. The minimum among the two sets\nforms a defensive alliance.\nCase 3: Let us assume that more than two neighbours of vi are picked into the\nsolution, then as explained in case 3 of Lemma 2, this forms a defensive alliance\nwith a larger cardinality than case 2.\nWe will have a total of twenty [or twelve] combinations in case 2. The mini-\nmum among them will give the optimal solution for the subproblem Pi. ⊓⊔\nGiven a vertex v,\n1. Computing the closest vertex to v with degree at most three can be done in\nO(m+ n) time.\n2. Using BFS, we can compute the shortest cycle containing v in O(m + n)\ntime.\n6 Balchandar Reddy and A. S. Kare\n3. Finding two vertex disjoint shortest paths to vertices with degree at most\nthree from v, is also solvable in O(m+ n) time.\nTherefore, we can compute the optimal solution (if it exists) of the subproblem Pi\nin linear time. Hence, the DEFENSIVE ALLIANCE problem on graphs with ∆(G) ≤\n5 is polynomial-time solvable. This concludes the proof of Theorem 1.\n4 DEFENSIVE ALLIANCE on graphs with maximum degree 6\nIn this section, we prove that the DEFENSIVE ALLIANCE problem is NP-Complete\non graphs with maximum degree 6.\nTheorem 2. DEFENSIVE ALLIANCE on graphs with ∆(G) = 6 is NP-Complete.\nIt is easy to see that the problem is in NP. To prove the NP-Hardness, we reduce\nfrom the following problem:\nDOMINATING SET ON CUBIC GRAPHS:\nGiven a cubic graph G = (V,E), a set S ⊆ V is a dominating set if every vertex\nv ∈ V \\ S has a neighbour in S.\nInput: A simple, undirected cubic graph G = (V,E), and a positive integer k.\nQuestion: Is there a dominating set S ⊆ V such that |S| ≤ k?\nIn 1980, Kikuno et al. [15] proved that the DOMINATING SET problem on cubic\ngraphs is NP-Complete.\nGiven an instance I = (G, k) of the DOMINATING SET problem with G being a cu-\nbic graph, we construct an instance of I ′ = (G′, k′) of the DEFENSIVE ALLIANCE\nproblem. We need a special type of vertices in G′ that cannot be a part of any\ndefensive alliance of size at most k′, we call them the forbidden vertices. The\nforbidden vertices are indicated using square-shaped nodes. We make use of the\nfollowing gadget to generate the forbidden vertices.\nGadget to generate the forbidden vertices:\nConsider a 6-regular graph. Note that all the vertices have a closed neighbour-\nhood of seven. To protect a vertex of the defensive alliance from a 6-regular\ngraph, it should have at least four closed neighbours in the set. Therefore, the\noptimal defensive alliance can be obtained by finding the minimum induced sub-\ngraph of minimum degree ≥ 3 (from here on referred to as MSMD(3)). As we do\nnot want any vertex from the gadget to be a part of the defensive alliance, we\nconstruct a 6-regular graph with no MSMD(3) of size at most k′. We make use\nof Ramanujan graphs to construct the gadget.\nDefinition 1. A Ramanujan graph is a r-regular graph whose non-trivial eigen-\nvalues lie in the interval [−2\n√\nr − 1, 2\n√\nr − 1]. For more information on Ramanu-\njan graphs, we refer the reader to [19, 20].\nTractability of defensive alliance in graphs 7\nFrom [19], we have that r-regular Ramanujan graphs have girth, g ≥ 4\n3 logr−1 |V |.\nGiven the minimum degree r and girth g, we have the following lower bound on\nthe graph size |V (r, g)|.\n|V (r, g)| ≥ r(r−1)\ng−1\n2 −2\nr−2 for odd g\n|V (r, g)| ≥ 2(r−1)\ng\n2 −2\nr−2 for even g\nLemma 4. The size of the 6-regular Ramanujan graph that has an MSMD(3)\nof size k′ + 1 is polynomial in k′.\nProof. Consider a 6-regular Ramanujan graph R. R has girth at least 4\n3 log5 n.\nLet M be an MSMD(3) of R. As M is an induced subgraph of R, it also has a\ngirth of at least 4\n3 log5 n. From the lower bound on the size of the graph |V (r, g)|,\nwe have that the size of M with girth at least 4\n3 log5 n is Ω(2\n4\n3\nlog5 n\n2 ) which is\nΩ(n\n2\n3\nlog5 2). The bound can be represented as Ω(nc) where c = 0.2871.\nk′ + 1 ≥ c1 · 2\n4\n3\nlog5 n\n2 =⇒ k′ + 1 ≥ c1 · n 2\n3\nlog5 2 =⇒ k′ + 1 ≥ c1 · n0.2871\n=⇒ n ≤ (k\n′+1\nc )3.484.\nThe size of R with M of size k′ + 1 is O((k′ + 1)3.484). This proves that the\norder of the 6-regular Ramanujan graph with MSMD(3) of size at least k′ +1 is\na polynomial function of k′. ⊓⊔\nLemma 5. There is no defensive alliance of size at most k′ from the 6-regular\nRamanujan graph of size polynomial in k′.\nProof. Let R be the 6-regular Ramanujan graph. Each vertex of R has a degree\nof six with a closed neighbourhood of seven. To obtain the optimal defensive\nalliance from R, we compute an induced subgraph with each vertex having a\nclosed neighbourhood of four, hence the MSMD(3). We know that the size of\nMSMD(3) is at least k′ +1. This concludes that there is no defensive alliance of\nsize at most k′ from R. ⊓⊔\nNote: The construction of Ramanujan graphs by Lubotzky et al. can be done in\npolynomial time [19]. One can construct r + 1-regular Ramanujan graph using\nthis method when r is a prime and r ≡ 1 (mod 4). Therefore, the 6-regular\nRamanujan graph can be constructed in polynomial time.\nLet us consider a 6-regular Ramanujan graph with one missing edge with the\nsame girth as that of a 6-regular Ramanujan graph. We can obtain the graph by\nremoving an edge which is not part of a shortest cycle. In a 6-regular Ramanujan\ngraph with one missing edge, the vertices of MSMD(3) with at most one missing\nedge can also form a defensive alliance. So, we look to find an MSMD(3) with\nat most one missing edge. The size of MSMD(3) with at most one missing edge\nof girth g, is at least the size of MSMD(3) of girth g. Therefore, Lemma 4 and\nLemma 5 also hold for 6-regular Ramanujan graph with one missing edge. Hence,\nwe obtain the following lemma.\n8 Balchandar Reddy and A. S. Kare\nLemma 6. There is no defensive alliance of size at most k′ from the 6-regular\nRamanujan graph with one missing edge of size polynomial in k′.\nWe use the 6-regular Ramanujan graph with one missing edge as the gadget.\nThe vertices corresponding to the missing edge will be used in place of the\nforbidden vertices. From Lemma 6, we conclude that there is no defensive alliance\nof size at most k′ from the gadget.\nReduction from the DOMINATING SET ON CUBIC GRAPHS:\nWe construct an instance I ′ = (G′, k′) of the DEFENSIVE ALLIANCE problem in\nthe following way. See Figure 2 for an illustration.\n1. For every vertex vi ∈ V in G, we introduce four copies in G′, which are\nrepresented by v0i , v\n1\ni , v\n2\ni , v\n3\ni .\n2. For every vertex vji ∈ G′, 1 ≤ i ≤ n, 0 ≤ j ≤ 3, we introduce two vertices\nuj\ni , w\nj\ni . We make all the three vertices vji , u\nj\ni and wj\ni adjacent to each other.\n3. We make each v0i adjacent to u1\ni , each w1\ni adjacent to u2\ni and each w2\ni adjacent\nto u3\ni . Additionally, we also make w0\ni adjacent to u0\ni+1 for each i ∈ {1, ..., n−\n1}.\n4. For every vertex v0i , we introduce a vertex si, and make it adjacent to v0i .\nWe make si also adjacent to vjk for all k ∈ NG(vi), with the smallest possible\nvalue of j ∈ {1, 2, 3} such that vjk has no other sk adjacent to it. For example,\nv1 is adjacent to v2, v3 and v6 in G, so we make s1 adjacent to v12 , v\n1\n3 and v16\nin G′ as all three of them do not have any other sk adjacent to them at this\npoint. Similarly, v2 is adjacent to v1, v3 and v4 in G, we make s2 adjacent to\nv11 , v\n2\n3 and v14 . Here v13 is adjacent to s1, hence we go for v23 . We add these\nedges lexicographically, starting from s1.\nFrom hereon, we add the forbidden vertices that are constructed using the gad-\nget.\n5. We make every vertex of vji , 1 ≤ i ≤ n, 0 ≤ j ≤ 3, adjacent to two forbidden\nvertices.\n6. We make every vertex of {uj\ni ∪ wj\ni }, 1 ≤ i ≤ n, 0 ≤ j ≤ 3, adjacent to three\nforbidden vertices.\nThe vertices corresponding to the missing edge in a 6-regular Ramanujan graph\ncan be used as the forbidden vertices. We use multiple gadgets to represent all\nthe forbidden vertices in the reduction.\nLemma 7. If G has a dominating set of size at most k then G′ has a defensive\nalliance of size at most k′, where k′ = 4n+ 8k.\nProof. Let the set S be a dominating set of size at most k then we claim that\nthe set S′ = X ∪ Y ∪ Z is a defensive alliance of G′ of size at most k′, where\nX =\nn⋃\ni=1\n{u0\ni ∪ v0i ∪w0\ni }\nTractability of defensive alliance in graphs 9\nv1\nv2\nv3\nv4\nv5\nv6 G\nG′\nv01 v11\nu1\n1 w1\n1 u2\n1 w2\n1 u3\n1 w3\n1\nv21 v31\nv02 v12\nu1\n2 w1\n2 u2\n2 w2\n2 u3\n2 w3\n2\nv22 v32\nv03 v13\nu1\n3 w1\n3 u2\n3 w2\n3 u3\n3 w3\n3\nv23 v33\nv04 v14\nu1\n4 w1\n4 u2\n4 w2\n4 u3\n4 w3\n4\nv24 v34\nv05 v15\nu1\n5 w1\n5 u2\n5 w2\n5 u3\n5 w3\n5\nv25 v35\nv06 v16\nu1\n6 w1\n6 u2\n6 w2\n6 u3\n6 w3\n6\nv26 v36\nu0\n1\nw0\n1\nu0\n2\nw0\n2\nu0\n3\nw0\n3\nu0\n4\nw0\n4\nu0\n5\nw0\n5\nu0\n6\nw0\n6\ns1\ns2\ns3\ns4\ns5\ns6\nFig. 2. A 6-vertex cubic graph G and its corresponding G′\n10 Balchandar Reddy and A. S. Kare\nY =\n⋃\ni|vi∈S\n⋃\nj∈{1,2,3}\n{uj\ni ∪ vji ∪wj\ni }\nZ =\n⋃\ni|vi /∈S\nsi\nFor S′ to be a defensive alliance, every vertex from the sets X,Y and Z should\nbe protected.\nSet X:\n– Consider a vertex v ∈ {v0i , 1 ≤ i ≤ n}. v has seven vertices in its closed\nneighbourhood including the two forbidden vertices. v has three of its neigh-\nbours, u0\ni , w\n0\ni and one among u1\ni or si in S′. Including itself, v has four closed\nneighbours in S′, which makes v protected.\n– Similarly, it can be seen that a vertex v ∈ {u0\ni ∪ w0\ni , 1 ≤ i ≤ n} has the\nmajority of its neighbours in S′. Hence, v is protected.\nSet Y :\n– Consider a vertex v ∈ {uj\ni ∪ wj\ni , i|vi ∈ S, 1 ≤ j ≤ 3}. v is adjacent to three\nforbidden vertices. As all the other neighbours of v are in S′, it is easy to\nverify that v is protected.\n– A vertex v ∈ {vji , i|vi ∈ S, 1 ≤ j ≤ 3} has six vertices in its closed neigh-\nbourhood which includes two forbidden vertices. As the two neighbours of\nv, uj\ni and wj\ni are in S′, v is protected.\nSet Z:\nConsider a vertex v ∈ {si, i|vi /∈ S}. v has a total of five vertices in its closed\nneighbourhood. v has two of its neighbours, v0i and one of its other three neigh-\nbours in S′. Including itself, v has three closed neighbours in S′ . Hence, v is\nprotected.\nAs all the vertices of the sets X,Y and Z are protected. As |X | = 3n, |Y | =\n9k, |Z| = n− k and |X |+ |Y |+ |Z| = 4n+ 8k = k′. Therefore, S′ is a defensive\nalliance of size at most k′. This concludes the proof of Lemma 7. ⊓⊔\nLemma 8. If G′ has a defensive alliance of size at most k′ then G has a domi-\nnating set of size at most k.\nProof. Let S′ be a defensive alliance in G′ of size at most k′. We define the sets\nX,Yi and Zi as follows.\nX =\nn⋃\ni=1\n{u0\ni ∪ v0i ∪w0\ni }\nYi =\n⋃\nj∈{1,2,3}\n{uj\ni ∪ vji ∪ wj\ni }, for 1 ≤ i ≤ n\nZi = si, for 1 ≤ i ≤ n\n1. If v ∈ X is a part of the defensive alliance S′, then X ⊆ S′.\nTractability of defensive alliance in graphs 11\n– Picking any vertex from {u0\ni , w\n0\ni }, 1 ≤ i ≤ n would lead to X ⊆ S′.\n– Let v ∈ v0i , 1 ≤ i ≤ n be a vertex in S′. In the neighbourhood of v, even\nafter picking both the vertices from Yi, Zi to be a part of S′, there is still a\ndeficiency of one that needs to be filled by one among u0\ni , w\n0\ni . This creates a\nchain reaction that pushes all of X to S′.\n2. If v ∈ {Yi ∪ Zi} is a part of the defensive alliance S′, then X ⊆ S′.\n– Let v ∈ Yi is in S′. For v to be protected, all the neighbours of v (excluding\nthe forbidden vertices) must be in S′. This triggers a chain reaction that\npushes all of Yi and also v0i to S′. As v0i is in S′, X ⊆ S′.\n– Let v ∈ Zi is a part of S′. For v to be protected, one of its neighbours\nfrom Yk, k ∈ NG[v] must be in S. This would again lead to all of Yk and v0k\nbeing in S′ and hence X ⊆ S′.\n3. It is clear that if S′ is non-empty then X must be a part of S′. Here, we\nhave consumed 3n vertices of k′ and are left with n + 8k vertices that can\nstill go into S′.\n4. Note that by now, vertex v ∈ {u0\ni ∪ w0\ni },"
}
